<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.alura.maven</groupId>
	<artifactId>lojaweb</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>A custom project</name>
	<url>http://www.haoxuer.com</url>

	<dependencies> <!-- sao a maneira de introduzir bibliotecas num projeto maven, sempre olhe 
			o mvnrepository para procurar dependencias, provavelmente qualquer coisa 
			que voce queira fazer, deve existir uma bliblioteca que ja faz. -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/br.com.caelum.stella/caelum-stella-core -->
		<dependency>
			<groupId>br.com.caelum.stella</groupId>
			<artifactId>caelum-stella-core</artifactId>
			<version>2.1.4</version>
		</dependency>

		<!-- adicionando a classe pdotudos que criamos -->
		<dependency>
			<groupId>br.alura.maven</groupId>
			<artifactId>produtos</artifactId>
			<version>1.0.0-SNAPSHOT</version>
			<exclusions>
				<exclusion>  <!-- para excluir essa dependencia que vem junto com a dependencia de produtos. -->
					<groupId>xmlpull</groupId>
					<artifactId>xmlpull</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.31.v20200723</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<!-- <webApp> para indicar o contexto que quero usar para acessar, nesse 
						caso localhost:8080/loja <contextPath>/loja/</contextPath> </webApp> -->
				</configuration>
			</plugin>
		</plugins>
	</build>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
</project>